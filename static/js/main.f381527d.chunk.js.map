{"version":3,"sources":["assets/image/logo.svg","components/common/content/Content.jsx","components/common/my-button/MyButton.jsx","components/memo-and-usememo/MemoAndUseMemo.jsx","components/without-memo-and-usememo/WithoutMemoAndUseMemo.jsx","components/App.jsx","index.jsx"],"names":["module","exports","h1","count","renderButtons","onChange","arrayNumbers","className","src","logo","alt","type","text","handlerChangedCount","word","console","log","onClick","MemorizedButton","React","memo","props","MyButton","MemoAndUseMemo","useState","setCount","limit","setLimit","changedCount","arrayNumer","useMemo","filter","x","Content","e","target","value","map","idx","key","WithoutMemoAndUseMemo","App","toggle","setToggle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f381527d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\n\r\nimport logo from '../../../assets/image/logo.svg';\r\n\r\nexport default ({ h1, count, renderButtons, onChange, arrayNumbers }) =>\r\n    <div className=\"App\">\r\n        <header className=\"App-header\">\r\n            <h1> { h1 } </h1>\r\n            <h2>\r\n                Please open devtools then you see how many re-renders\r\n            </h2>\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <div>\r\n                Count: { count }\r\n            </div>\r\n            <div className=\"container-buttons\">\r\n                { renderButtons }\r\n            </div>\r\n            <div className=\"container-array-number\">\r\n                <label> Filter input: </label>\r\n                <input\r\n                    className=\"input-limit\"\r\n                    type=\"number\"\r\n                    {...{ onChange }}\r\n                />\r\n                <div>\r\n                    Array Number: { arrayNumbers }\r\n                </div>\r\n            </div>\r\n        </header>\r\n    </div>\r\n","import React from 'react';\r\n\r\nexport default ({ text, handlerChangedCount, word }) => {\r\n    console.log(`MyButton re-render ${word} memo`);\r\n    return (\r\n        <button className=\"buttons\" onClick={handlerChangedCount}>\r\n            {text}\r\n        </button>\r\n    )\r\n}","import React, { useState, useMemo } from 'react';\r\n\r\nimport Content from '../common/content/Content';\r\nimport MyButton from '../common/my-button/MyButton';\r\n\r\n//if you want to another way implemented\r\n// import MemorizedMyButton from './memorized-my-button/MemorizedMyButton';\r\n\r\nconst MemorizedButton = React.memo((props) => <MyButton {...props} />, () => true)\r\n\r\nfunction MemoAndUseMemo() {\r\n  const [count, setCount] = useState(0);\r\n  const [limit, setLimit] = useState(5);\r\n\r\n  const handlerChangedCount = changedCount => () => setCount(changedCount);\r\n  const arrayNumer = useMemo(() => {\r\n    const numbers = [5, 10, 15, 20, 25, 30]\r\n    const filtered = numbers.filter(x => {\r\n      console.log('iteration with useMemo')\r\n      return x > limit\r\n    })\r\n    return filtered;\r\n  }, [limit]);\r\n\r\n  return (\r\n    <Content\r\n      h1={'Counter with memo and useMemo'}\r\n      {... { count }}\r\n      renderButtons={\r\n        <>\r\n          <MemorizedButton\r\n            text=\"Increment\"\r\n            word={'with'}\r\n            handlerChangedCount={handlerChangedCount(count => count + 1)}\r\n          />\r\n          <MemorizedButton\r\n            text=\"Decrement\"\r\n            word={'with'}\r\n            handlerChangedCount={handlerChangedCount(count => count - 1)}\r\n          />\r\n          {/* if you want to another way implemented */}\r\n          {/* <MemorizedMyButton\r\n            text=\"Increment\"\r\n            handlerChangedCount={handlerChangedCount(count => count + 1)}\r\n          />\r\n          <MemorizedMyButton\r\n            text=\"Decrement\"\r\n            handlerChangedCount={handlerChangedCount(count => count -1)}\r\n          /> */}\r\n        </>\r\n      }\r\n      onChange={e => setLimit(e.target.value)}\r\n      arrayNumbers={arrayNumer.map((x, idx) => (\r\n        <span key={idx} className=\"number\">{x}, </span>\r\n      ))}\r\n    />\r\n  )\r\n}\r\n\r\nexport default MemoAndUseMemo;\r\n","import React, { useState } from 'react';\r\n\r\nimport Content from '../common/content/Content';\r\nimport MyButton from '../common/my-button/MyButton';\r\n\r\nfunction WithoutMemoAndUseMemo() {\r\n  const numbers = [5, 10, 15, 20, 25, 30];\r\n  const [count, setCount] = useState(0);\r\n  const [limit, setLimit] = useState(5);\r\n\r\n  const arrayNumer = numbers.filter(x => {\r\n      console.log('iteration without useMemo');\r\n      return x > limit\r\n  });\r\n\r\n  const handlerChangedCount = changedCount => () => setCount(changedCount);\r\n\r\n  return (\r\n    <Content\r\n      h1={'Counter without memo and useMemo'}\r\n      {... { count }}\r\n      renderButtons={\r\n        <>\r\n          <MyButton\r\n            text=\"Increment\"\r\n            word={'without'}\r\n            handlerChangedCount={handlerChangedCount(count => count + 1)}\r\n          />\r\n          <MyButton\r\n            text=\"Decrement\"\r\n            word={'without'}\r\n            handlerChangedCount={handlerChangedCount(count => count - 1)}\r\n          />\r\n        </>\r\n      }\r\n      onChange={e => setLimit(e.target.value)}\r\n      arrayNumbers={arrayNumer.map((x, idx) => <span key={idx} className=\"number\">{x}, </span>)}\r\n    />\r\n  )\r\n}\r\n\r\nexport default WithoutMemoAndUseMemo;\r\n","import React, { useState } from 'react';\r\nimport MemoAndUseMemo from './memo-and-usememo/MemoAndUseMemo';\r\nimport WithoutMemoAndUseMemo from './without-memo-and-usememo/WithoutMemoAndUseMemo';\r\n\r\nimport '../assets/style/App.css';\r\n\r\n\r\nfunction App() {\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container-toogle-button\">\r\n        <button\r\n          className=\"toogle-button\"\r\n          onClick={() => setToggle(!toggle)}\r\n        >\r\n          Toggle Components\r\n        </button>\r\n      </div>\r\n      {toggle === true && <MemoAndUseMemo />}\r\n      {toggle === false && <WithoutMemoAndUseMemo />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nimport './assets/style/index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}